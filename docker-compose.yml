version: "3.4"
services:
  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: pass
      POSTGRES_USER: root
      POSTGRES_DB: postgres
      WEB_MS_USER: web_ms
      WEB_MS_PASSWORD: pass
      WEB_USER: web
      WEB_PASSWORD: pass
      SERVICE_MS_USER: service_ms
      SERVICE_MS_PASSWORD: pass
      SERVICE_USER: service
      SERVICE_PASSWORD: pass
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgresql-data:/var/lib/postgresql/data
      - "./config/postgresql/create_auth_db.sh:/docker-entrypoint-initdb.d/create_auth_db.sh"
      - "./config/postgresql/create_music_db.sh:/docker-entrypoint-initdb.d/create_music_db.sh"
      - "./service/src/main/resources/database/initDB.sql:/sql.tmp/music.init.sql:ro"
      - "./service/src/main/resources/database/populateDB.sql:/sql.tmp/music.populate.sql:ro"
      - "./web/src/main/resources/database/initDB.sql:/sql.tmp/auth.init.sql:ro"
      - "./web/src/main/resources/database/populateDB.sql:/sql.tmp/auth.populate.sql:ro"
    ports:
      - 65432:5432


  service:
    image: my_image_service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres/music
      SPRING_DATASOURCE_USERNAME: service_ms
      SPRING_DATASOURCE_PASSWORD: pass
    depends_on:
      - postgres
    ports:
      - 8081:8080

  web:
    image: my_image_web
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres/auth
      SPRING_DATASOURCE_USERNAME: web_ms
      SPRING_DATASOURCE_PASSWORD: pass
      WEB_PLAYLIST_SERVICE_URL: http://service:8080
    depends_on:
      - postgres
      - service
    ports:
    - 8080:8080

networks:
  default:
    name: ru-sberit-network

volumes:
  postgresql-data:
    name: ru-sberit-playlist-postgresql-data